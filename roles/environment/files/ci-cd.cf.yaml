AWSTemplateFormatVersion: 2010-09-09
Description: Deploys CI/CD Pipeline for Environment
Parameters:
  ProjectName:
    Type: String
    Description: Name of the Project
  GithubAccount:
    Type: String
  GitHubOAuthToken:
    Type: String
  ApiRepo:
    Type: String
Resources:
  ApiCodePipelineArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: api-artifact-store
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
  ApiCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
                - "s3.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "ApiCodePipelinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Action:
                  - "s3:GetObject"
                  - "s3:GetObject"
                  - "s3:GetBucketVersioning"
                Resource:
                  - "*"
                Effect: "Allow"
              -
                Action:
                  - "s3:PutObject"
                Resource:
                  - "arn:aws:s3:::codepipeline*"
                Effect: "Allow"
              -
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetApplicationRevision"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:GetDeploymentConfig"
                  - "codedeploy:RegisterApplicationRevision"
                Resource:
                  - "*"
                Effect: "Allow"
  ApiCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ApiCodePipeline
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt ApiCodePipelineRole.Arn
      ArtifactStore:
        Location: !Ref ApiCodePipelineArtifactStore
        Type: S3
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                -
                  Name: SourceOutput
              Configuration:
                Owner: !Ref GithubAccount
                Repo: !Ref ApiRepo
                PollForSourceChanges: False
                Branch: master
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                -
                  Name: SourceOutput
              OutputArtifacts:
                -
                  Name: BuildOutput
              Configuration:
                ProjectName: Api
              RunOrder: 2
  ApiWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/master
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref ApiCodePipeline
      TargetAction: SourceAction
      Name: ApiWebhook
      TargetPipelineVersion: !GetAtt ApiCodePipeline.Version
      RegisterWithThirdParty: 'true'